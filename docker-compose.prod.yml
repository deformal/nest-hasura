version: '3.6'
services:
  postgres:
    build: 
      context: ./
      dockerfile: ./postgres/Dockerfile
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./postgres/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready","-h","db"]
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  hasura:
    build: 
      context: ./
      dockerfile: ./hasura/Dockerfile
    restart: always
    ports:
      - 8080:8080
    env_file:
      - ./hasura/.env
    depends_on:
      postgres:
        condition: service_healthy

  caddy:
    build:
      context: ./
      dockerfile: ./caddy/Dockerfile
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '2019:2019'
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  server:
    build: 
      context: ./
      dockerfile: ./apps/node-k8s/Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ./apps/node-k8s/.env

volumes:
  caddy_data:
  caddy_config:
  db_data: